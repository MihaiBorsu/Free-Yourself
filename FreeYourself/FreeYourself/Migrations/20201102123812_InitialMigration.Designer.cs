// <auto-generated />
using System;
using FreeYourself.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreeYourself.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201102123812_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FreeYourself.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("adminId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamBase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("adminId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FreeYourself.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("combinedDailyXp")
                        .HasColumnType("int");

                    b.Property<int>("comboDays")
                        .HasColumnType("int");

                    b.Property<string>("teamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalXp")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FreeYourself.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TotalXp")
                        .HasColumnType("int");

                    b.Property<int>("currentDayXp")
                        .HasColumnType("int");

                    b.Property<int?>("ownerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("registrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("teamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ownerId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("FreeYourself.Models.VehicleDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("serialNumber")
                        .HasColumnType("int");

                    b.Property<int?>("vehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("vehicleId");

                    b.ToTable("VehicleDocuments");
                });

            modelBuilder.Entity("FreeYourself.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("difficultyLevel")
                        .HasColumnType("int");

                    b.Property<int?>("participantId")
                        .HasColumnType("int");

                    b.Property<int>("totalKm")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("participantId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FreeYourself.Models.Team", b =>
                {
                    b.HasOne("FreeYourself.Models.User", "admin")
                        .WithMany()
                        .HasForeignKey("adminId");
                });

            modelBuilder.Entity("FreeYourself.Models.User", b =>
                {
                    b.HasOne("FreeYourself.Models.Team", null)
                        .WithMany("users")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("FreeYourself.Models.Vehicle", b =>
                {
                    b.HasOne("FreeYourself.Models.User", "owner")
                        .WithMany()
                        .HasForeignKey("ownerId");
                });

            modelBuilder.Entity("FreeYourself.Models.VehicleDocument", b =>
                {
                    b.HasOne("FreeYourself.Models.Vehicle", "vehicle")
                        .WithMany()
                        .HasForeignKey("vehicleId");
                });

            modelBuilder.Entity("FreeYourself.Models.Workout", b =>
                {
                    b.HasOne("FreeYourself.Models.User", "participant")
                        .WithMany()
                        .HasForeignKey("participantId");
                });
#pragma warning restore 612, 618
        }
    }
}
